import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Updater, CommandHandler, CallbackQueryHandler, CallbackContext

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –º–æ–Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_coins = {}

# –ö–æ–º–∞–Ω–¥–∞ /start
def start(update: Update, context: CallbackContext) -> None:
    user_id = update.effective_user.id
    if user_id not in user_coins:
        user_coins[user_id] = 0
    update.message.reply_text(f'–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ –Ω–∞ –º–æ–Ω–µ—Ç—É, —á—Ç–æ–±—ã –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å FINT –º–æ–Ω–µ—Ç—ã. –£ —Ç–µ–±—è —Å–µ–π—á–∞—Å {user_coins[user_id]} FINT.',
                              reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("ü™ô", callback_data='click')]]))

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫—É
def button(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    query.answer()
    user_id = update.effective_user.id
    if user_id not in user_coins:
        user_coins[user_id] = 0
    user_coins[user_id] += 1
    query.edit_message_text(text=f'–¢—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª 1 FINT –º–æ–Ω–µ—Ç—É! –£ —Ç–µ–±—è —Å–µ–π—á–∞—Å {user_coins[user_id]} FINT.',
                            reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("ü™ô", callback_data='click')]]))

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
def error(update: Update, context: CallbackContext) -> None:
    logger.warning('Update "%s" caused error "%s"', update, context.error)

def main() -> None:
    # –í—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ –≤–∞—à —Ç–æ–∫–µ–Ω Telegram Bot API
    token = 'YOUR_TELEGRAM_BOT_TOKEN'
    updater = Updater(token)

    dispatcher = updater.dispatcher

    dispatcher.add_handler(CommandHandler('start', start))
    dispatcher.add_handler(CallbackQueryHandler(button))
    dispatcher.add_error_handler(error)

    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
